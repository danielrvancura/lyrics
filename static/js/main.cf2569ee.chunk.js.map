{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","id","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","process","then","res","console","log","data","message","body","catch","err","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","Link","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","search","trackTitle","findTrack","e","preventDefault","onChange","defineProperty","target","name","onSubmit","bind","placeholder","Index","Search","tracks_Tracks","Lyrics","lyrics","match","params","_this$state","keys","lyrics_body","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","App","context_Provider","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wRCWzBC,SARA,WACb,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,+BAA+BC,GAAG,UAAnD,8CCHIC,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACxB,OAAOA,EAAOC,MACV,IAAK,gBACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,WAAYJ,EAAOK,QACnBC,QAAS,mBAEb,QACA,OAAOP,IAIEQ,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAR,OAAAiB,EAAA,EAAAjB,CAAAU,MAAAH,EAAAP,OAAAkB,EAAA,EAAAlB,CAAAK,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIjB,MAAQ,CACJK,WACC,GACDE,QAAS,+CACTkB,SAAU,SAAAxB,GAAM,OAAIU,EAAKe,SAAS,SAAA1B,GAAK,OAAID,EAAQC,EAAOC,OALlEU,EAAA,OAAAR,OAAAwB,EAAA,EAAAxB,CAAAK,EAAAC,GAAAN,OAAAyB,EAAA,EAAAzB,CAAAK,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WAQwB,IAAAC,EAAAlB,KAChBmB,IAAMC,IAAN,8JAAAT,OACIU,qCACHC,KAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChBR,EAAKL,SAAS,CAAErB,WAAY+B,EAAIG,KAAKC,QAAQC,KAAKpC,eAIrDqC,MAAM,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,OAjBlC,CAAAd,IAAA,SAAAC,MAAA,WAqBI,OACEvC,EAAAC,EAAAC,cAACG,EAAQY,SAAT,CAAkBsB,MAAOjB,KAAKb,OACzBa,KAAK+B,MAAMC,cAvBtBrC,EAAA,CAA8BsC,aA6BjBC,EAAWnD,EAAQmD,0BC5CjBC,EAAA,WACX,OACIzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OACAwD,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAAaC,QAAS,qBCiBnDC,EAvBF,SAACZ,GAAU,IACba,EAAUb,EAAVa,MAEV,OACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAKgE,EAAMC,aACPnE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACbH,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAArB,SADA,KACwD+D,EAAME,WAC9DpE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAArB,SAHA,KAGgE+D,EAAMG,YAE9ErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAE,gBAAAtC,OAAkBiC,EAAMM,UAAYrE,UAAU,0BACtDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBADb,oBCiBOsE,mLA1BX,OACEzE,EAAAC,EAAAC,cAACsD,EAAD,KACK,SAAAjB,GAAS,IACEzB,EAAwByB,EAAxBzB,WAAYE,EAAYuB,EAAZvB,QAEpB,YAAmB0D,IAAf5D,GAAmD,IAAtBA,EAAWW,OACnCzB,EAAAC,EAAAC,cAACuD,EAAD,MAGHzD,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACI3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBa,EAAlC,KACJhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdW,EAAW8D,IAAI,SAAAC,GAAI,OAChB7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAOxC,IAAKuC,EAAKX,MAAMM,SAAUN,MAAOW,EAAKX,qBAf/CX,qBCuDPwB,6MAvDVtE,MAAQ,CACJuE,WAAY,MAGhBC,UAAY,SAAC/C,EAAUgD,GACnBA,EAAEC,iBAEF1C,IAAMC,IAAN,8FAAAT,OAAwGb,EAAKX,MAAMuE,WAAnH,oDAAA/C,OACGU,qCACHC,KAAK,SAAAC,GACFX,EAAU,CACNvB,KAAM,gBACNI,QAAS8B,EAAIG,KAAKC,QAAQC,KAAKpC,aAGnCM,EAAKe,SAAS,CAAE6C,WAAY,OAK/B7B,MAAM,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,QAGlCgC,SAAW,SAACF,GACZ9D,EAAKe,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAiBsE,EAAEI,OAAOC,KAAOL,EAAEI,OAAO/C,iFAG/B,IAAAC,EAAAlB,KACP,OACEtB,EAAAC,EAAAC,cAACsD,EAAD,KACK,SAAAjB,GAAS,IACEL,EAAaK,EAAbL,SAEV,OADEY,QAAQC,IAAIR,GAEVvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BADb,sBAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,+BACAH,EAAAC,EAAAC,cAAA,QAAMsF,SAAUhD,EAAKyC,UAAUQ,KAAKjD,EAAMN,IACtClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAOR,UAAU,+BAA+BuF,YAAY,0BACxEH,KAAK,aAAahD,MAAOC,EAAK/B,MAAMuE,WAAYI,SAAU5C,EAAK4C,YAG/DpF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wCAAwCQ,KAAK,UAA/D,+BA9CE4C,aCWPoC,EAXD,WACZ,OACE3F,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACG3E,EAAAC,EAAAC,cAAC0F,EAAD,MAEC5F,EAAAC,EAAAC,cAAC2F,EAAD,QC+DOC,oNAhEXrF,MAAQ,CACJyD,MAAO,GACP6B,OAAQ,uFAGQ,IAAAvD,EAAAlB,KAChBmB,IAAMC,IAAN,mGAAAT,OAA6GX,KAAK+B,MAAM2C,MAAMC,OAAO7F,GAArI,YAAA6B,OACIU,qCACHC,KAAK,SAAAC,GAGF,OAFAL,EAAKL,SAAS,CAAE4D,OAAQlD,EAAIG,KAAKC,QAAQC,KAAK6C,SAEvCtD,IAAMC,IAAN,4FAAAT,OAAsGO,EAAKa,MAAM2C,MAAMC,OAAO7F,GAA9H,YAAA6B,OACHU,uCAGPC,KAAM,SAAAC,GACHC,QAAQC,IAAIF,EAAIG,KAAKC,QAAQC,KAAK6C,QAClCvD,EAAKL,SAAS,CAAE+B,MAAOrB,EAAIG,KAAKC,QAAQC,KAAKgB,UAEhDf,MAAM,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,sCAIvB,IAAA8C,EACqB5E,KAAKb,MAAvByD,EADHgC,EACGhC,MAAO6B,EADVG,EACUH,OACf,YAAarB,IAAVR,QACUQ,IAAXqB,GAC8B,IAA9BnF,OAAOuF,KAAKjC,GAAOzC,QACY,IAA/Bb,OAAOuF,KAAKJ,GAAQtE,OAEbzB,EAAAC,EAAAC,cAACuD,EAAD,MAGJzD,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACI3E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAG,IAAIpE,UAAU,4BAAvB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,IACM+D,EAAME,WADZ,QAC4BpE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBC,GAAG,kBAAkB8D,EAAMC,cAExFnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAa4F,EAAOK,eAErCpG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,6BADJ,KACmCgE,EAAMG,YAEzCrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,wBADJ,IAC6BgE,EAAMmC,eAAeC,iBAAiB,GAAGC,YAAYC,kBAElFxG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,iCAAoD,IAAnBgE,EAAMuC,SAAiB,QAAU,8CAnDzDlD,cCsBNmD,mLAnBX,OACE1G,EAAAC,EAAAC,cAACyG,EAAD,KACA3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACA5G,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,SAAP,KACE3E,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KAEE9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC3F,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWpB,gBAXzCvC,aCIE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCbNuB,IAASC,OAAOxH,EAAAC,EAAAC,cAACuH,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlF,KAAK,SAAAmF,GACjCA,EAAaC","file":"static/js/main.cf2569ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.97727b84.gif\";","import React from 'react';\r\nimport './Index.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n  <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n  <span className =\"navbar-brand mb-0 h1 mx-auto\" id=\"navbar\">Find My Lyrics</span>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\nswitch(action.type){\r\n    case 'SEARCH_TRACKS':\r\n    return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: \"Search Results\"\r\n    };\r\n    default:\r\n    return state;\r\n}\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = { \r\n        track_list:\r\n         [ ],\r\n        heading: 'Billboard Top 10 Tracks in the United States',\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${\r\n            process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({ track_list: res.data.message.body.track_list });\r\n        })\r\n            \r\n      \r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n          {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <img \r\n            src={spinner}\r\n            alt=\"Loading...\"\r\n            style={{ width: '200px', margin: '40px auto', display: 'block'}}\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Track = (props) => {\r\n    const { track } = props;\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n     <div className= \"card.mb-4.shadow-sm\">\r\n        <div className=\"card-body\">\r\n            <h5>{track.artist_name}</h5>\r\n                <p className=\"card-text\">\r\n                <strong><i className=\"fas fa-play\"></i>Track</strong>: {track.track_name}\r\n                <br/>\r\n                <strong><i className=\"fas fa-compact-disc\"></i>Album</strong>: {track.album_name}\r\n        </p>\r\n        <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n        <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n        </Link>\r\n     </div>\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default  Track;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from '../tracks/Track';\r\n\r\n class Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n              const { track_list, heading } = value;\r\n\r\n              if (track_list === undefined ||  track_list.length === 0) {\r\n                return <Spinner />\r\n              } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h3 className=\"text-center mb-4\">{heading} </h3>\r\n                    <div className=\"row\">\r\n                    {track_list.map(item => (\r\n                        <Track key={item.track.track_id} track={item.track}/>\r\n                        \r\n                    ))}\r\n                    </div>\r\n                    </React.Fragment>\r\n                );\r\n              }\r\n          }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Consumer } from '../../context'\r\n\r\n class search extends Component {\r\n     state = {\r\n         trackTitle: ''\r\n     };\r\n\r\n     findTrack = (dispatch, e) => {\r\n         e.preventDefault();\r\n\r\n         axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n            process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: 'SEARCH_TRACKS',\r\n                payload: res.data.message.body.track_list\r\n            });\r\n\r\n            this.setState({ trackTitle: ''})\r\n            \r\n        })\r\n            \r\n      \r\n        .catch(err => console.log(err));\r\n     }\r\n\r\nonChange = (e) => {\r\nthis.setState({ [e.target.name]: e.target.value});\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n              const { dispatch } = value;\r\n              console.log(value);\r\n            return (\r\n                <div className=\"card card-body mb-4 p-4\">\r\n                <h1 className=\"display-4 text-center\"> \r\n                <i className=\"fas fa-music text-center\"/> Search for a Song\r\n                </h1>\r\n                <p className=\"lead text-center\">Get the lyrics for any song</p>\r\n                <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Song title goes here...\" \r\n                    name=\"trackTitle\" value={this.state.trackTitle} onChange={this.onChange} />\r\n                    \r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n                </form>\r\n                </div>\r\n            )  \r\n          }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default search;","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n       <Search />\r\n       \r\n        <Tracks />\r\n        \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n// import Moment from 'react-moment'\r\nimport './Index.css';\r\n\r\nclass Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${\r\n            process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            this.setState({ lyrics: res.data.message.body.lyrics });\r\n\r\n            return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${\r\n                process.env.REACT_APP_MM_KEY}`)\r\n        })\r\n            \r\n        .then (res => {\r\n            console.log(res.data.message.body.lyrics)\r\n            this.setState({ track: res.data.message.body.track });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n  render() {\r\n      const { track, lyrics } = this.state;\r\n      if(track === undefined || \r\n        lyrics === undefined || \r\n        Object.keys(track).length === 0 || \r\n        Object.keys(lyrics).length === 0 \r\n      ) {\r\n        return <Spinner />\r\n  } else {\r\n        return (\r\n           <React.Fragment>\r\n               <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n               <div className=\"card\">\r\n                <h5 className=\"card-header\">\r\n                    \"{track.track_name}\" by <span className=\"text-secondary\" id=\"text-secondary\">{track.artist_name}</span>\r\n                </h5>\r\n                <div className=\"card-body\">\r\n                <p className=\"card-text\">{lyrics.lyrics_body}</p></div>\r\n               </div>\r\n            <ul className=\"list-group mt-3\">\r\n            <li className=\"list-group-item\">\r\n                <strong>Album Name:</strong>: {track.album_name}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n            <strong>Naughty Words: </strong>{track.explicit === 0 ? 'No :(' : \"Yes! Your parents will hate this!\"}\r\n            </li>\r\n            {/* <li className=\"list-group-item\">\r\n            <strong>Release Date: </strong> <Moment format=\"MM/DD/YYYY\">{track.album_release_date}</Moment>\r\n            </li> */}\r\n\r\n            </ul>\r\n\r\n           </React.Fragment> \r\n        );\r\n  }\r\n}\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Index from './components/layout/Index'\nimport {Provider} from './context'\nimport Lyrics from './components/tracks/Lyrics'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container\">\n        <Switch>\n\n          <Route exact path=\"/\" component={Index} />\n          <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n        </Switch>\n        </div>\n      </React.Fragment>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}